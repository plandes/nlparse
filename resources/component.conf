# description: parsing components and decorators


## Components
#
# declare a NLP pipeline component to remove sentence boundaries (effectively
# skipping the sentence chunking step); handy for some tasks that have already
# segmented sentences
[remove_sent_boundaries_component]
class_name = zensols.nlp.Component
pipe_name = remove_sent_boundaries
modules = list: zensols.nlp.component
pipe_add_kwargs = dict: {'first': True}


## Decorators
#
[split_token_sentence_decorator]
class_name = zensols.nlp.SplitTokenSentenceDecorator

[strip_feature_sentence_decorator]
class_name = zensols.nlp.StripSpacyFeatureSentenceDecorator

[filter_spacy_feature_sentence_decorator]
class_name = zensols.nlp.FilterSentenceFeatureDocumentDecorator

[update_feature_document_decorator]
class_name = zensols.nlp.UpdateFeatureDocumentDecorator
