#-*-conf-*-

[default]
temporary_dir=./target
test_res_dir=./test-resources

[test]
parse_test = ${default:test_res_dir}/parse-test.json
feature_test = ${default:test_res_dir}/feature-test.json

[default_doc_parser]
class_name = zensols.nlp.SpacyFeatureDocumentParser
lang = en
model_name = ${lang}_core_web_sm

[special_doc_parser]
class_name = zensols.nlp.SpacyFeatureDocumentParser
special_case_tokens = eval: '<s> </s>'.split()

[disable_tagger_doc_parser]
class_name = zensols.nlp.SpacyFeatureDocumentParser
lang = en
model_name = ${lang}_core_web_sm
disable_component_names = eval: 'tagger parser'.split()



[lemma_token_mapper]
class_name = zensols.nlp.LemmatizeTokenMapper

[default_token_normalizer]
class_name = zensols.nlp.MapTokenNormalizer
mapper_class_list = eval: 'lemma_token_mapper'.split()

[nonorm_token_normalizer]
class_name = zensols.nlp.TokenNormalizer

[filter_token_mapper]
class_name = zensols.nlp.FilterTokenMapper
remove_stop = True
remove_punctuation = True

[filter_space_token_mapper]
class_name = zensols.nlp.FilterTokenMapper
remove_space = True

[filter_pron_token_mapper]
class_name = zensols.nlp.FilterTokenMapper
remove_pronouns = True
remove_determiners = True
remove_punctuation = True

[subs_token_mapper]
class_name = zensols.nlp.SubstituteTokenMapper
regex = r'[ \t]'
replace_char = _

[lower_case_token_mapper]
class_name = zensols.nlp.LambdaTokenMapper
map_lambda = lambda x: (x[0], x[1].lower())

[map_filter_token_normalizer]
class_name = zensols.nlp.MapTokenNormalizer
mapper_class_list = eval: 'filter_token_mapper'.split()

[map_filter_space_token_normalizer]
class_name = zensols.nlp.MapTokenNormalizer
mapper_class_list = eval: 'filter_space_token_mapper'.split()

[map_filter_pron_token_normalizer]
class_name = zensols.nlp.MapTokenNormalizer
mapper_class_list = eval: 'filter_pron_token_mapper'.split()

[map_lower_token_normalizer]
class_name = zensols.nlp.MapTokenNormalizer
mapper_class_list = eval: 'lower_case_token_mapper'.split()

[map_embed_token_normalizer]
class_name = zensols.nlp.MapTokenNormalizer
embed_entities = False
mapper_class_list = eval: 'filter_token_mapper'.split()

[map_filter_subs_token_normalizer]
class_name = zensols.nlp.MapTokenNormalizer
mapper_class_list = eval: 'filter_token_mapper lower_case_token_mapper subs_token_mapper'.split()

[feature_no_filter_token_mapper]
class_name = zensols.nlp.FilterTokenMapper
remove_determiners = False
remove_punctuation = False

[feature_no_filter_token_normalizer]
class_name = zensols.nlp.MapTokenNormalizer
mapper_class_list = eval: 'feature_no_filter_token_mapper'.split()

[feature_default_filter_token_mapper]
class_name = zensols.nlp.FilterTokenMapper
remove_determiners = True
remove_punctuation = True

[feature_default_filter_token_normalizer]
class_name = zensols.nlp.MapTokenNormalizer
mapper_class_list = eval: 'feature_default_filter_token_mapper'.split()

[feature_stop_filter_token_mapper]
class_name = zensols.nlp.FilterTokenMapper
remove_stop = True
remove_determiners = True
remove_punctuation = True

[feature_stop_filter_token_normalizer]
class_name = zensols.nlp.MapTokenNormalizer
mapper_class_list = eval: 'feature_stop_filter_token_mapper'.split()


[cache_doc_stash]
class_name = zensols.nlp.CachingFeatureDocumentParser
delegate = instance: default_doc_parser
stash = object: zensols.persist.DictionaryStash
