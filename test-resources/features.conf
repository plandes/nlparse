# config
[filter_token_mapper]
class_name = zensols.nlp.FilterTokenMapper
remove_space = True

[token_normalizer]
class_name = zensols.nlp.MapTokenNormalizer
mapper_class_list = list: filter_token_mapper

[split_by_space_token_mapper]
class_name = zensols.nlp.SplitTokenMapper
regex = r'[ ]'

[token_normalizer_split_ents]
class_name = zensols.nlp.MapTokenNormalizer
mapper_class_list = list: filter_token_mapper, split_by_space_token_mapper

[langres]
class_name = zensols.nlp.LanguageResource
token_normalizer = instance: token_normalizer

[langres_default]
class_name = zensols.nlp.LanguageResource

[langres_split_ents]
class_name = zensols.nlp.LanguageResource
token_normalizer = instance: token_normalizer_split_ents

[doc_parser_default]
class_name = zensols.nlp.FeatureDocumentParser
langres = instance: langres_default
remove_empty_sentences = True

[doc_parser_split_ents]
class_name = zensols.nlp.FeatureDocumentParser
langres = instance: langres_split_ents
remove_empty_sentences = True

[doc_parser]
class_name = zensols.nlp.FeatureDocumentParser
langres = instance: langres
remove_empty_sentences = True

[doc_parser_feat_subset]
class_name = zensols.nlp.FeatureDocumentParser
langres = instance: langres
remove_empty_sentences = True
token_feature_ids = set: norm, lemma_, i, idx, sent_i

[doc_parser_feat_no_exist]
class_name = zensols.nlp.FeatureDocumentParser
langres = instance: langres
remove_empty_sentences = True
token_feature_ids = set: norm, lemma_, i, idx, sent_i, BOGUS

[doc_parser_no_remove_sents]
class_name = zensols.nlp.FeatureDocumentParser
langres = instance: langres


[combiner_token_normalizer]
class_name = zensols.nlp.TokenNormalizer
embed_entities = False

[combiner_langres]
class_name = zensols.nlp.LanguageResource
token_normalizer = instance: combiner_token_normalizer

[doc_parser_combiner]
class_name = zensols.nlp.MappingCombinerFeatureDocumentParser
langres = instance: combiner_langres
replica_parsers = instance: list: doc_parser
overwrite_features = list: ent_

[doc_parser_combiner_reverse]
class_name = zensols.nlp.MappingCombinerFeatureDocumentParser
langres = instance: langres
replica_parsers = instance: list: doc_parser_default
overwrite_features = list: ent_
clone_and_norm_replica_token = False
