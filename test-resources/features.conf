# config
[filter_token_mapper]
class_name = zensols.nlp.FilterTokenMapper
remove_space = True

[token_normalizer]
class_name = zensols.nlp.MapTokenNormalizer
mapper_class_list = eval: 'filter_token_mapper'.split()

[langres]
class_name = zensols.nlp.LanguageResource
token_normalizer = instance: token_normalizer

[langres_default]
class_name = zensols.nlp.LanguageResource

[doc_parser_default]
class_name = zensols.nlp.FeatureDocumentParser
langres = instance: langres_default
remove_empty_sentences = True

[doc_parser]
class_name = zensols.nlp.FeatureDocumentParser
langres = instance: langres
remove_empty_sentences = True

[doc_parser_feat_subset]
class_name = zensols.nlp.FeatureDocumentParser
langres = instance: langres
remove_empty_sentences = True
token_feature_ids = set: norm, lemma_, i, idx, sent_i

[doc_parser_feat_no_exist]
class_name = zensols.nlp.FeatureDocumentParser
langres = instance: langres
remove_empty_sentences = True
token_feature_ids = set: norm, lemma_, i, idx, sent_i, BOGUS

[doc_parser_no_remove_sents]
class_name = zensols.nlp.FeatureDocumentParser
langres = instance: langres
