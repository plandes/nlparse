# config
[filter_token_mapper]
class_name = zensols.nlp.FilterTokenMapper
remove_space = True

[token_normalizer]
class_name = zensols.nlp.MapTokenNormalizer
mapper_class_list = list: filter_token_mapper

[doc_parser_default]
class_name = zensols.nlp.SpacyFeatureDocumentParser

[doc_parser]
class_name = zensols.nlp.SpacyFeatureDocumentParser
token_normalizer = instance: token_normalizer

[doc_parser_feat_subset]
class_name = zensols.nlp.SpacyFeatureDocumentParser
token_normalizer = instance: token_normalizer
token_feature_ids = set: norm, lemma_, i, idx, sent_i

[doc_parser_feat_no_exist]
class_name = zensols.nlp.SpacyFeatureDocumentParser
token_normalizer = instance: token_normalizer
token_feature_ids = set: norm, lemma_, i, idx, sent_i, BOGUS

[doc_parser_no_remove_sents]
class_name = zensols.nlp.SpacyFeatureDocumentParser
token_normalizer = instance: token_normalizer

[strip_sent_doc_parser]
class_name = zensols.nlp.SpacyFeatureDocumentParser
document_decorators = eval({'import': ['zensols.nlp.decorate as n']}): (n.StripSentenceDecorator(),)

[filter_sent_doc_parser]
class_name = zensols.nlp.SpacyFeatureDocumentParser
document_decorators = eval({'import': ['zensols.nlp.decorate as n']}): (n.FilterEmptySentenceDocumentDecorator(),)


# splits on whitespace
[split_space_token_mapper]
class_name = zensols.nlp.SplitTokenMapper
regex = r'[ ]'


# combiner
[split_ent_token_mapper]
class_name = zensols.nlp.SplitEntityTokenMapper

[token_normalizer_split_ents_keep_space]
class_name = zensols.nlp.MapTokenNormalizer
mapper_class_list = list: split_ent_token_mapper

[token_normalizer_split_ents]
class_name = zensols.nlp.MapTokenNormalizer
mapper_class_list = list: filter_token_mapper, split_ent_token_mapper

[token_normalizer_split_space]
class_name = zensols.nlp.MapTokenNormalizer
mapper_class_list = list: filter_token_mapper, split_space_token_mapper

[doc_parser_split_ents]
class_name = zensols.nlp.SpacyFeatureDocumentParser
token_normalizer = instance: token_normalizer_split_ents

[doc_parser_split_ents_keep_space]
class_name = zensols.nlp.SpacyFeatureDocumentParser
token_normalizer = instance: token_normalizer_split_ents_keep_space

[doc_parser_split_space]
class_name = zensols.nlp.SpacyFeatureDocumentParser
token_normalizer = instance: token_normalizer_split_space

[no_embed_token_normalizer]
class_name = zensols.nlp.TokenNormalizer
embed_entities = False

[doc_parser_no_embed_ents]
class_name = zensols.nlp.SpacyFeatureDocumentParser
token_normalizer = instance: no_embed_token_normalizer

[doc_parser_combiner_target_1]
class_name = zensols.nlp.SpacyFeatureDocumentParser
token_normalizer = instance: no_embed_token_normalizer

[doc_parser_combiner_target_2]
class_name = zensols.nlp.SpacyFeatureDocumentParser
token_normalizer = instance: token_normalizer_split_ents

[doc_parser_combiner_target_3]
class_name = zensols.nlp.SpacyFeatureDocumentParser

[doc_parser_combiner]
class_name = zensols.nlp.MappingCombinerFeatureDocumentParser
target_parser = instance: doc_parser_combiner_target_1
source_parsers = instance: list: doc_parser_split_ents
overwrite_features = list: ent_

[doc_parser_combiner_reverse]
class_name = zensols.nlp.MappingCombinerFeatureDocumentParser
target_parser = instance: doc_parser_combiner_target_2
source_parsers = instance: list: doc_parser_split_ents
overwrite_features = list: ent_

# this doesn't work because one (primary multi-token span) to many (replica
# splits entities) mapping isn't supported
[doc_parser_combiner_reverse_2]
class_name = zensols.nlp.MappingCombinerFeatureDocumentParser
target_parser = instance: doc_parser_combiner_target_3
source_parsers = instance: list: doc_parser_split_ents
overwrite_features = list: ent_
validate_features = set: norm

# sentence index test
[sent_idx_token_mapper]
class_name = zensols.nlp.FilterTokenMapper
#remove_pronouns = True

[sent_idx_token_normalizer]
class_name = zensols.nlp.MapTokenNormalizer
mapper_class_list = list: sent_idx_token_mapper

[sent_idx_doc_parser]
class_name = zensols.nlp.SpacyFeatureDocumentParser
token_normalizer = instance: sent_idx_token_normalizer
